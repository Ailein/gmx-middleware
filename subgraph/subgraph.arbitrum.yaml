specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: RewardRouterV2
    network: arbitrum-one
    source:
      address: "0xA906F338CB21815cBc4Bc87ace9e68c87eF8d8F1"
      abi: RewardRouterV2
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakeGmx
        - UnstakeGmx
        - StakeGlp
        - UnstakeGlp
      abis:
        - name: RewardRouterV2
          file: ./abis/RewardRouterV2.json
      eventHandlers:
        - event: StakeGmx(address,address,uint256)
          handler: handleStakeGmxV2
        - event: UnstakeGmx(address,address,uint256)
          handler: handleUnstakeGmxV2
        - event: StakeGlp(address,uint256)
          handler: handleStakeGlp
        - event: UnstakeGlp(address,uint256)
          handler: handleUnstakeGlp
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: RewardRouterV1
    network: arbitrum-one
    source:
      address: "0xc73d553473dC65CE56db96c58e6a091c20980fbA"
      abi: RewardRouter
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakeGmx
        - UnstakeGmx
        - StakeGlp
        - UnstakeGlp
      abis:
        - name: RewardRouter
          file: ./abis/RewardRouter.json
      eventHandlers:
        - event: StakeGmx(address,uint256)
          handler: handleStakeGmxV1
        - event: UnstakeGmx(address,uint256)
          handler: handleUnstakeGmxV1
        - event: StakeGlp(address,uint256)
          handler: handleStakeGlp
        - event: UnstakeGlp(address,uint256)
          handler: handleUnstakeGlp
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: RewardRouterMigration
    network: arbitrum-one
    source:
      address: "0x7b01acf6e7e9cc276e644ac65d770c1131583453"
      abi: RewardRouter
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakeGmx
        - UnstakeGmx
        - StakeGlp
        - UnstakeGlp
      abis:
        - name: RewardRouter
          file: ./abis/RewardRouter.json
      eventHandlers:
        - event: StakeGmx(address,uint256)
          handler: handleStakeGmxV1
        - event: UnstakeGmx(address,uint256)
          handler: handleUnstakeGmxV1
        - event: StakeGlp(address,uint256)
          handler: handleStakeGlp
        - event: UnstakeGlp(address,uint256)
          handler: handleUnstakeGlp
      file: ./src/arbitrum/reward.ts

  - kind: ethereum/contract
    name: StakedGmxTrackerTransfer
    network: arbitrum-one
    source:
      address: "0x908C4D94D34924765f1eDc22A1DD098397c59dD4"
      abi: RewardTracker
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakedGmxTrackerTransfer
        - StakedGmxTrackerClaim
      abis:
        - name: RewardTracker
          file: ./abis/RewardTracker.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleStakedGmxTrackerTransfer
        - event: Claim(address,uint256)
          handler: handleStakedGmxTrackerClaim
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: StakedGlpTrackerTransfer
    network: arbitrum-one
    source:
      address: "0x1aDDD80E6039594eE970E5872D247bf0414C8903"
      abi: RewardTracker
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - StakedGlpTrackerTransfer
        - StakedGlpTrackerClaim
      abis:
        - name: RewardTracker
          file: ./abis/RewardTracker.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleStakedGlpTrackerTransfer
        - event: Claim(address,uint256)
          handler: handleStakedGlpTrackerClaim
      file: ./src/arbitrum/reward.ts

  - kind: ethereum/contract
    name: BonusGmxTrackerTransfer
    network: arbitrum-one
    source:
      address: "0x4d268a7d4C16ceB5a606c173Bd974984343fea13"
      abi: RewardTracker
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - BonusGmxTrackerTransfer
      abis:
        - name: RewardTracker
          file: ./abis/RewardTracker.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleBonusGmxTrackerTransfer
      file: ./src/arbitrum/reward.ts

  - kind: ethereum/contract
    name: FeeGmxTrackerTransfer
    network: arbitrum-one
    source:
      address: "0xd2D1162512F927a7e282Ef43a362659E4F2a728F"
      abi: RewardTracker
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - FeeGmxTrackerTransfer
        - FeeGmxTrackerClaim
      abis:
        - name: RewardTracker
          file: ./abis/RewardTracker.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleFeeGmxTrackerTransfer
        - event: Claim(address,uint256)
          handler: handleFeeGmxTrackerClaim
      file: ./src/arbitrum/reward.ts
  - kind: ethereum/contract
    name: FeeGlpTrackerTransfer
    network: arbitrum-one
    source:
      address: "0x4e971a87900b931fF39d1Aad67697F49835400b6"
      abi: RewardTracker
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - FeeGlpTrackerTransfer
        - FeeGlpTrackerClaim
      abis:
        - name: RewardTracker
          file: ./abis/RewardTracker.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleFeeGlpTrackerTransfer
        - event: Claim(address,uint256)
          handler: handleFeeGlpTrackerClaim
      file: ./src/arbitrum/reward.ts

  - kind: ethereum/contract
    name: ChainlinkAggregatorBTC
    network: arbitrum-one
    source:
      address: "0x942d00008D658dbB40745BBEc89A93c253f9B882"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedBTC
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorETH
    network: arbitrum-one
    source:
      address: "0x3607e46698d218B3a5Cae44bF381475C0a5e2ca7"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedETH
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorUNI
    network: arbitrum-one
    source:
      address: "0xeFc5061B7a8AeF31F789F1bA5b3b8256674F2B71"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedUNI
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: ChainlinkAggregatorLINK
    network: arbitrum-one
    source:
      address: "0x9b8DdcF800a7BfCdEbaD6D65514dE59160a2C9CC"
      abi: ChainlinkAggregator
      startBlock: 225000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ChainlinkPrice
      abis:
        - name: ChainlinkAggregator
          file: ./abis/ChainlinkAggregator.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdatedLINK
      file: ./src/arbitrum/tokenPrice.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorSPELL
  #   network: arbitrum-one
  #   source:
  #     address: "0x4b3f43e086790a71270750192472fb61df7e8566"
  #     abi: ChainlinkAggregator
  #     startBlock: 2372599
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedSPELL
  #     file: ./src/arbitrum/tokenPrice.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorSUSHI
  #   network: arbitrum-one
  #   source:
  #     address: "0x0d02b6eba98bda364953d9b1def8eedc19ffd516"
  #     abi: ChainlinkAggregator
  #     startBlock: 226756
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedSUSHI
  #     file: ./src/arbitrum/tokenPrice.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorDAI
  #   network: arbitrum-one
  #   source:
  #     address: "0xfc06bb03a9e1d8033f87ea6a682cbd65477a43b9"
  #     abi: ChainlinkAggregator
  #     startBlock: 226756
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedDAI
  #     file: ./src/arbitrum/tokenPrice.ts
  # - kind: ethereum/contract


  - kind: ethereum/contract
    name: GmxPrice
    network: arbitrum-one
    source:
      address: "0x80A9ae39310abf666A87C743d6ebBD0E8C42158E"
      abi: UniswapPoolV3
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pricefeed
      abis:
        - name: UniswapPoolV3
          file: ./abis/UniswapPoolV3.json
      eventHandlers:
        - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
          handler: handleUniswapGmxEthSwap
      file: ./src/arbitrum/tokenPrice.ts
  - kind: ethereum/contract
    name: GlpManager
    network: arbitrum-one
    source:
      address: "0x321F653eED006AD1C29D174e17d96351BDe22649"
      abi: GlpManager
      startBlock: 100000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Pricefeed
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/arbitrum/tokenPrice.ts


  - kind: ethereum/contract
    name: gmxVault
    network: arbitrum-one
    source:
      address: "0x489ee077994b6658eafa855c308275ead8097c4a"
      abi: gmxVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - ClosePosition
        - DecreasePosition
        - IncreasePosition
        - LiquidatePosition
        - UpdatePosition
        - Trade
      abis:
        - name: gmxVault
          file: ./abis/Vault-arbitrum.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleUpdatePosition
      file: ./src/trading.ts



